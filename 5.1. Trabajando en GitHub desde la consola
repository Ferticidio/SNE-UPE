5.1. Trabajando en GitHub desde la consola
Ya sea porque no sentimos más cómodos desde la consola, porque tenemos Linux y no queremos una interfaz grafica o simplemente porque nos parece que la consola nos permite ser mucho más eficientes, es importante saberse los comandos para trabajar con GitHub desde allí. Estos comandos de los que hablaremos son los de Git, que, como sabemos, es el verdadero repositorio. 
En Linux es muy fácil instalar Git (que lo necesitamos para comunicarnos con GitHub). Desde Debian (y sus derivados) es tan sencillo como abrir la terminal y escribir:
$ apt-get install git-core
Tanto para Windows como para Mac disponemos de la versión grafica de GitHub, que además viene con un shell a elección. De esta forma no necesitamos utilizar comandos para tener todo listo para funcionar. Tampoco tenemos necesidad de configurarlo ni de generar las claves ssh ya que de eso se encarga el instalador. En Linux debemos utilizar los siguientes comandos:
    $ git config --global user.name "Usuario" 
    $ git config --global user.email "tuemail@dominio.com"
    $ ssh-keygen -t rsa -C “tuemail@dominio.com”
Luego de eso visualizaremos la clave SSH, debemos copiarla y agregarla en GitHub mediante la web, dentro de la sección de accounts settings. 
Solo nos queda iniciar el repositorio. Primero lo creamos en GitHub desde la interfaz web. Luego en la terminal nos ubicamos en la carpeta donde lo vamos a alojar y escribimos:
    $ git init
Con estos comandos ya estamos listos para trabajar… Ahora podemos crear los archivos y agregarlos al repositorio. Supongamos que creamos el archivo readme.md. Luego en la terminal escribimos:
    $ git add readme.md
Luego debemos hacer el commit, que es poco mas que dejar un comentario sobre las modificaciones que hicimos sobre el fichero.  El comando seria:
    $ git commit -m “Comentario sobre la tarea realizada”
Solo nos queda hacer el “push” desde local al repositorio de GitHub. Para ello primero debemos conectar los dos repositorios, esto se hace solo la primera vez, luego nos queda conectado y solo debemos hacer el push. El comando es:
    $ git remote add origin git@github.com:pathdelrepositorio.git
Por último nos queda el push:
    $ git push origin master
Con esto ya tenemos subidos los cambios al repositorio global. 
Otros comandos interesantes de saber son los que nos permiten manejarnos con las ramas (branchs)
# Crear un branch
$ git branch nombre_del_branch
# Cambiarse de branch (para trabajar en una rama específica)
$ git checkout nombre_del_brach
# Ver los branchs del proyecto
$ git branch 
# Haciendo merge de branchs.
# Situados en el branch principal
$ git merge Nombre_Del_Branch_Aunificar
Desde la terminal podemos acceder a la ayuda y ver varios comandos más con una breve explicación de lo que hacen.
usage: git [--version] [--exec-path[=]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=] [--work-tree=] [--namespace=]
           [-c name=value] [--help]
           command [args]
Los comandos mas comúnmente utilizados son:
   add        añade el contenido del archivo al indice
   bisect    búsqueda binaria de los cambios que produjeron errores (Bugs)
   branch     lista, crea o borra ramas
   checkout   actualiza los archivos del árbol de trabajo para que coincidan con los del índice o un árbol especifico
Checkout a branch or paths to the working tree
   clone      copia el repositorio en un nuevo directorio
   commit     guarda los cambios en el repositorio
   diff       muestra los cambios entre commits, o los commits y el árbol de trabajo, etc.
Show changes between commits, commit and working tree, etc
   fetch     descarga objetos y referencias desde otro repositorio
 Download objects and refs from another repository
   grep       muestra las lienas que posean un patrón similar
Print lines matching a pattern
   init       crea un repositorio nuevo o reinicia un repositorio que ya hemos creado
Create an empty git repository or reinitialize an existing one
   log      muestra los registros de los commits
  Show commit logs
   merge    fusiona 2 o mas historiales de trabajo
Join two or more development histories together
   mv         mueve o renombra un archivo, un directorio o symlink
 Move or rename a file, a directory, or a symlink
   pull       extrae y fusiona desde otro repositorio o de una rama local
Fetch from and merge with another repository or a local branch
   push      actualiza referencias remotas y los objetos asociados 
 Update remote refs along with associated objects
   rebase     permite reorganizar los commits de manera que pueda editar u ordenar varios archivos            en  un solo commit(masomenos lo q entendí de la pag de git help)
Forward-port local commits to the updated upstream head
   reset      vuelve el cabezal actual a un estado especifico
Reset current HEAD to the specified state
   rm         elimina archivos
Remove files from the working tree and from the index
   show       muestra tipos de objetos
Show various types of objects
   status     muestra el estado de el árbol de trabajo
Show the working tree status
   tag       crea, elimina, lista o verifica los objetos etiquetados con la firma de GPG
 Create, list, delete or verify a tag object signed with GPG
